############################################################################## FILE: four_in_a_row.py# WRITERS: Ayal Meitar, ayal.meitar, 309981215, Shahar Nahum, shaharna13,# 313586877# EXERCISE: intro2cs ex12 2017-2018# DESCRIPTION: the file includes the code which connects the gui and the game# of four connect and runs a four connect game########################################################################################################################################################### imports#############################################################################from gui import *import sys############################################################################## Constants#############################################################################IP_PLACE = 3PORT = 2PLAYER_TYPE = 1ARGUMENTS_ERROR = "Illegal program arguments"NUMBER_OF_SERVER_ARGUMENTS = 2NUMBER_OF_CLIENT_ARGUMENTS = 3MIN_PORT = 0MAX_PORT = 65535def check_args(argv):    """    The function checks if the input is valid    :param argv:    :return: the function returns true if the input is valid and else otherwise    """    if len(argv) != NUMBER_OF_SERVER_ARGUMENTS + 1 and len(argv) \            != NUMBER_OF_CLIENT_ARGUMENTS + 1:        #  checks if the number of arguments is valid        print(ARGUMENTS_ERROR)        return False    if argv[1] != "human" and argv[1] != 'ai':        #  checks it the player type is valid        print(ARGUMENTS_ERROR)        return False    if MIN_PORT > int(argv[2]) > MAX_PORT:        # checks if the port is valid        print(ARGUMENTS_ERROR)        return False    return Truedef main(argv):    """    the function runs a four in a row game, according to the parameters given    either starts as a server or a client human or ai    :param argv:    :return:    """    root = Tk()    # Finds out the IP, to be used cross-platform without special issues.    # (on local machine, could also use "localhost" or "127.0.0.1")    if check_args(argv):        #  checks if the arguments are valid        is_ai = False  # default deceleration for ai player        player_type = argv[PLAYER_TYPE]        port = int(argv[PORT])        if len(argv) == NUMBER_OF_CLIENT_ARGUMENTS + 1:            #  if it is the client            server = False            ip = argv[IP_PLACE]        else:  # if it is the server            server = True            ip = None        if player_type == "ai":            is_ai = True        if server:            #  starts the game as the server            ConnectFour(root, port, ip, is_ai)  # the ip is determined None            root.title("Server")        else:            #  starts the game as the client            ConnectFour(root, port, ip, is_ai)            root.title("Client")        root.mainloop()if __name__ == '__main__':    main(sys.argv)